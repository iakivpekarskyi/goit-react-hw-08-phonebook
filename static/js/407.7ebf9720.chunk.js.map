{"version":3,"file":"static/js/407.7ebf9720.chunk.js","mappings":"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","sources":["redux/selectors.js","hooks/useContact.js","../node_modules/formik-mui/src/TextField.tsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx","../node_modules/@mui/icons-material/HighlightOff.js"],"sourcesContent":["export const selectFilter = state => state.filter.value;\n\nexport const selectContacts = state => state.contacts.items;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilter, selectContacts } from 'redux/selectors';\nimport { setFilter, clearFilter } from 'redux/filterSlice';\nimport { fetchContacts, addContact, deleteContact } from 'redux/operations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const addNewContact = ({ name, number }) => {\n    dispatch(addContact({ name, number }));\n  };\n\n  const removeContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const fetchAllContacts = useCallback(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const showFilter = filterValue => {\n    dispatch(setFilter(filterValue));\n  };\n\n  const clearContactFilter = () => {\n    dispatch(clearFilter());\n  };\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact && contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return {\n    contacts,\n    filter,\n    filteredContacts,\n    showFilter,\n    clearContactFilter,\n    addNewContact,\n    removeContact,\n    fetchAllContacts,\n  };\n};\n","import * as React from 'react';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@mui/material/TextField';\nimport { FieldProps, getIn } from 'formik';\n\nexport interface TextFieldProps\n  extends FieldProps,\n    Omit<MuiTextFieldProps, 'name' | 'value' | 'error'> {}\n\nexport function fieldToTextField({\n  disabled,\n  field: { onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting, touched, errors },\n  onBlur,\n  helperText,\n  ...props\n}: TextFieldProps): MuiTextFieldProps {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    error: showError,\n    helperText: showError ? fieldError : helperText,\n    disabled: disabled ?? isSubmitting,\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function TextField({ children, ...props }: TextFieldProps) {\n  return <MuiTextField {...fieldToTextField(props)}>{children}</MuiTextField>;\n}\n\nTextField.displayName = 'FormikMaterialUITextField';\n","import { Field, Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useContacts } from 'hooks/useContact';\n\nimport { TextField } from 'formik-mui';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(10, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(15, 'Too Long!')\n    .required('Required'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const { addNewContact, contacts } = useContacts();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      const newName = values.name;\n\n      if (contacts.find(contact => contact.name === newName)) {\n        alert(`${newName} is already in contacts list`);\n        return;\n      }\n\n      addNewContact(values);\n      resetForm();\n    } catch (error) {\n      console.error('Error while handling form submission:', error);\n    }\n  };\n\n  return (\n    <>\n      <h2>Add Contact</h2>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <Box marginY={1} sx={{ width: 350 }}>\n            <Field\n              component={TextField}\n              label=\"Name*\"\n              type=\"text\"\n              name=\"name\"\n              size=\"small\"\n              fullWidth\n              autoFocus\n            />\n          </Box>\n\n          <Box marginY={2} sx={{ width: 350 }}>\n            <Field\n              component={TextField}\n              label=\"Number*\"\n              type=\"tel\"\n              name=\"number\"\n              size=\"small\"\n              fullWidth\n            />\n          </Box>\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            size=\"medium\"\n            sx={{ mb: 7 }}\n          >\n            Add contact\n          </Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { useContacts } from 'hooks/useContact';\n\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport { Box, List, Typography } from '@mui/material';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const { removeContact } = useContacts();\n\n  return (\n    <List>\n      <Box\n        component=\"div\"\n        sx={{ display: { xs: 'flex' }, width: '100%', m: 1 }}\n      >\n        <Box\n          component=\"div\"\n          sx={{\n            display: { xs: 'flex' },\n            flexWrap: 'wrap',\n            flexGrow: 1,\n          }}\n        >\n          <Typography\n            variant=\"span\"\n            sx={{ mr: 4, flexGrow: 1, textAlign: 'left', fontWeight: 'bold' }}\n          >\n            {name}\n          </Typography>\n          <Typography variant=\"span\" sx={{ mr: 1 }}>\n            {number}\n          </Typography>\n        </Box>\n        <HighlightOffIcon\n          sx={{ color: '#000a', cursor: 'pointer' }}\n          onClick={() => removeContact(id)}\n        />\n      </Box>\n    </List>\n  );\n};\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nimport { useContacts } from 'hooks/useContact';\n\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\n\nexport const ContactList = () => {\n  const { filteredContacts } = useContacts();\n\n  return (\n    <Box component=\"div\" sx={{ width: '100%', maxWidth: 350 }}>\n      <List>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id} name={name} number={number} id={id} />\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\n\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilterChange = event => {\n    console.log('Typed value:', event.target.value);\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      sx={{ width: '100%', maxWidth: 350 }}\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        size=\"small\"\n        value={filter}\n        onChange={onFilterChange}\n        fullWidth\n      />\n    </Box>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { useContacts } from 'hooks/useContact';\nimport { Box, Grid } from '@mui/material';\n\nexport const Contacts = () => {\n  const { contacts, fetchAllContacts } = useContacts();\n\n  useEffect(() => {\n    fetchAllContacts();\n  }, [fetchAllContacts]);\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\n      <Box\n        component=\"div\"\n        sx={{ mt: 1, width: '100%', maxWidth: 350, textAlign: 'center' }}\n      >\n        <ContactForm />\n        <h2>Contacts</h2>\n        {contacts && contacts.length !== 0 && <Filter />}\n        <ContactList />\n      </Box>\n    </Grid>\n  );\n};\n","import { Contacts } from 'components/Contacts/Contacts';\nimport React from 'react';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\nexports.default = _default;"],"names":["selectFilter","state","filter","value","selectContacts","contacts","items","useContacts","dispatch","useDispatch","useSelector","fetchAllContacts","useCallback","fetchContacts","filteredContacts","contact","name","toLowerCase","includes","showFilter","filterValue","setFilter","clearContactFilter","clearFilter","addNewContact","_ref","number","addContact","removeContact","id","deleteContact","TextField","_a","children","props","__rest","React","MuiTextField","__assign","disabled","_b","field","fieldOnBlur","onBlur","_c","form","isSubmitting","touched","errors","helperText","fieldError","getIn","showError","error","e","fieldToTextField","displayName","validationSchema","Yup","shape","min","max","required","initialValues","ContactForm","_useContacts","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","newName","wrap","_context","prev","next","find","alert","concat","abrupt","t0","console","stop","_x","_x2","apply","arguments","_jsxs","_Fragment","_jsx","Formik","onSubmit","Form","autoComplete","Box","marginY","sx","width","Field","component","label","type","size","fullWidth","autoFocus","Button","variant","mb","ContactListItem","List","display","xs","m","flexWrap","flexGrow","Typography","mr","textAlign","fontWeight","HighlightOffIcon","color","cursor","onClick","ContactList","maxWidth","map","Filter","noValidate","onChange","event","log","target","Contacts","useEffect","Grid","container","justifyContent","alignItems","mt","length","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}