{"version":3,"file":"static/js/751.55af6088.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Field, Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { register } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(10, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        GOIT Academy\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst defaultTheme = createTheme();\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n  const formRef = React.useRef(null);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const name = data.get('name');\n\n    const email = data.get('email');\n\n    const password = data.get('password');\n\n    dispatch(register({ name, email, password }));\n    formRef.current.reset();\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1 }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <Formik\n            initialValues={{\n              initialValues,\n              allowExtraEmails: false,\n            }}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            <Form\n              ref={formRef}\n              onSubmit={formik => {\n                formik.handleSubmit();\n              }}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    required\n                    fullWidth\n                    id=\"name\"\n                    name=\"name\"\n                    label=\"Name\"\n                    autoComplete=\"off\"\n                    as={TextField}\n                  />\n\n                  <ErrorMessage name=\"name\" component=\"div\" />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    required\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email Address\"\n                    autoComplete=\"off\"\n                    as={TextField}\n                  />\n                  <ErrorMessage name=\"email\" component=\"div\" />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    required\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    autoComplete=\"off\"\n                    as={TextField}\n                  />\n                  <ErrorMessage name=\"password\" component=\"div\" />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Field\n                        type=\"checkbox\"\n                        name=\"allowExtraEmails\"\n                        color=\"primary\"\n                        as={Checkbox}\n                      />\n                    }\n                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Register\n              </Button>\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  <NavLink to=\"/login\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </NavLink>\n                </Grid>\n              </Grid>\n            </Form>\n          </Formik>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["validationSchema","Yup","shape","name","min","max","required","email","password","initialValues","Copyright","props","_jsxs","Typography","_objectSpread","variant","color","align","children","_jsx","Link","href","Date","getFullYear","defaultTheme","createTheme","RegisterForm","dispatch","useDispatch","formRef","React","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","LockOutlinedIcon","Formik","allowExtraEmails","onSubmit","event","preventDefault","data","FormData","currentTarget","get","register","current","reset","Form","ref","formik","handleSubmit","mt","Grid","container","spacing","item","xs","Field","fullWidth","id","label","autoComplete","as","TextField","ErrorMessage","type","FormControlLabel","control","Checkbox","Button","mb","justifyContent","NavLink","to"],"sourceRoot":""}