{"version":3,"file":"static/js/234.81667fd2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","hooks/useContact.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormikForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n\nexport const Label = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 30px;\n  margin-bottom: 60px;\n`;\n\nexport const FormikField = styled(Field)`\n  font-size: large;\n  width: 160px;\n  height: 30px;\n  border-width: 1px;\n  border-radius: 8px;\n  border-color: #cfcfcf;\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: #ff7979;\n`;\n\nexport const FormBtn = styled.button`\n  margin-top: 20px;\n  padding: 5px 10px;\n  background-color: #ffffff;\n  font-size: 18px;\n  color: #aeaeae;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n\n  :hover,\n  :focus {\n    background-color: #ffffff;\n    color: #7b7b7b;\n    box-shadow: rgba(100, 100, 111, 0.4) 0px 7px 29px 0px;\n    border: #ffffff;\n  }\n`;\n","export const selectFilter = state => state.filter.value;\n\nexport const selectContacts = state => state.contacts.items;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilter, selectContacts } from 'redux/selectors';\nimport { setFilter, clearFilter } from 'redux/filterSlice';\nimport { fetchContacts, addContact, deleteContact } from 'redux/operations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const addNewContact = ({ name, number }) => {\n    dispatch(addContact({ name, number }));\n  };\n\n  const removeContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const fetchAllContacts = useCallback(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const showFilter = filterValue => {\n    dispatch(setFilter(filterValue));\n  };\n\n  const clearContactFilter = () => {\n    dispatch(clearFilter());\n  };\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact && contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return {\n    contacts,\n    filter,\n    filteredContacts,\n    showFilter,\n    clearContactFilter,\n    addNewContact,\n    removeContact,\n    fetchAllContacts,\n  };\n};\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  FormikForm,\n  Label,\n  FormikField,\n  ErrorText,\n  FormBtn,\n} from './ContactForm.styled';\n\nimport { useContacts } from 'hooks/useContact';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(10, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(15, 'Too Long!')\n    .required('Required'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const { addNewContact, contacts } = useContacts();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      const newName = values.name;\n\n      if (contacts.find(contact => contact.name === newName)) {\n        alert(`${newName} is already in contacts list`);\n        return;\n      }\n\n      addNewContact(values);\n      resetForm();\n    } catch (error) {\n      console.error('Error while handling form submission:', error);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormikForm autoComplete=\"off\">\n        <Label>\n          Name\n          <FormikField type=\"text\" name=\"name\" />\n          <ErrorText name=\"name\" component=\"p\" />\n        </Label>\n        <Label>\n          Number\n          <FormikField type=\"tel\" name=\"number\" />\n          <ErrorText name=\"number\" component=\"p\" />\n        </Label>\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </FormikForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  width: 350px;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  background-color: #ffffff;\n  font-size: 14px;\n  color: #aeaeae;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n\n  :hover,\n  :focus {\n    background-color: #ffffff;\n    color: #7b7b7b;\n    box-shadow: rgba(100, 100, 111, 0.4) 0px 7px 29px 0px;\n    border: #ffffff;\n  }\n`;\n","import {\n  ListItem,\n  Text,\n  Button,\n  ButtonContainer,\n} from './ContactListItem.styled';\nimport { useContacts } from 'hooks/useContact';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const { removeContact } = useContacts();\n\n  return (\n    <ListItem>\n      <Text>\n        {name}: {number}\n      </Text>\n      <ButtonContainer>\n        <Button type=\"button\" onClick={() => removeContact(id)}>\n          Delete Contact\n        </Button>\n      </ButtonContainer>\n    </ListItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListWrap = styled.ul`\n  padding: 0;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ContactListWrap } from './ContactList.styled';\nimport { useContacts } from 'hooks/useContact';\n\nexport const ContactList = () => {\n  const { filteredContacts } = useContacts();\n\n  return (\n    <ContactListWrap>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactListItem key={id} name={name} number={number} id={id} />;\n      })}\n    </ContactListWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 40px;\n  gap: 8px;\n  width: 350px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 160px;\n  border-width: 1px;\n  border-radius: 4px;\n  border-color: #cfcfcf;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterWrap } from './Filter.styled';\nimport { FilterInput } from './Filter.styled';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilterChange = event => {\n    console.log('Typed value:', event.target.value);\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <FilterWrap>\n      <FilterInput\n        type=\"text\"\n        placeholder=\"Search for contact\"\n        value={filter}\n        onChange={onFilterChange}\n      ></FilterInput>\n    </FilterWrap>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { useContacts } from 'hooks/useContact';\n\nexport const Contacts = () => {\n  const { contacts, fetchAllContacts } = useContacts();\n\n  useEffect(() => {\n    fetchAllContacts();\n  }, [fetchAllContacts]);\n\n  return (\n    <div>\n      <h1>Phone book</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts && contacts.length !== 0 && <Filter />}\n      <ContactList />\n    </div>\n  );\n};\n","import { Contacts } from 'components/Contacts/Contacts';\nimport React from 'react';\n\nexport const ContactsPage = () => {\n  return (\n    <div>\n      <Contacts />\n    </div>\n  );\n};\n"],"names":["FormikForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","FormikField","Field","_templateObject3","ErrorText","ErrorMessage","_templateObject4","FormBtn","_templateObject5","selectFilter","state","filter","value","selectContacts","contacts","items","useContacts","dispatch","useDispatch","useSelector","fetchAllContacts","useCallback","fetchContacts","filteredContacts","contact","name","toLowerCase","includes","showFilter","filterValue","setFilter","clearContactFilter","clearFilter","addNewContact","_ref","number","addContact","removeContact","id","deleteContact","validationSchema","Yup","shape","min","max","required","initialValues","ContactForm","_useContacts","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","resetForm","newName","wrap","_context","prev","next","find","alert","concat","abrupt","t0","console","error","stop","_x","_x2","apply","arguments","_jsx","Formik","onSubmit","children","_jsxs","autoComplete","type","component","ListItem","Text","ButtonContainer","Button","ContactListItem","onClick","ContactListWrap","ContactList","map","FilterWrap","FilterInput","Filter","placeholder","onChange","event","log","target","Contacts","useEffect","length","ContactsPage"],"sourceRoot":""}